/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.content.home;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import main.content.data.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import lib.DBHelper;

/**
 *
 * @author fahmi
 */
public class HomePetugas extends javax.swing.JInternalFrame {
   Connection connection = new DBHelper().init();
    /**
     * 
     * Creates new form Data
     */
    CardLayout cardLayout;
    private String idlelang1,idpetugas;
    private String idbarang2,tgl2,harga2; 
    private String status;
    public HomePetugas(String id) {
        initComponents();
        BasicInternalFrameUI ui = (BasicInternalFrameUI) getUI();
        ui.setNorthPane(null);
        this.idpetugas=id;
        cardLayout = (CardLayout)(cards.getLayout());
        cardLayout.show(cards, "card1");
        tabelmodel1();
        tabelmodel2();
        tabel.setModel(defaultmodel1);
        tabel2.setModel(defaultmodel2);
        tutup.setEnabled(false);
        buka.setEnabled(false);
        
    }
    int row=0;
    int row2=0;
    private void tabelmodel1(){
    try {
        String sql1="select lelang.id_lelang,lelang.id_barang,barang.nama_barang,barang.deskripsi_barang, barang.harga_awal,lelang.harga_akhir,lelang.id_petugas,petugas.nama_petugas,lelang.status from lelang inner join barang ON lelang.id_barang=barang.id_barang inner join petugas on lelang.id_petugas= petugas.id_petugas";
          ResultSet modeltabel =connection.createStatement().executeQuery(sql1);
        while (modeltabel.next()) {            
            String[] modeldata={modeltabel.getString(1),modeltabel.getString(3),modeltabel.getString(4),modeltabel.getString(5),modeltabel.getString(6),modeltabel.getString(8),modeltabel.getString(9)};
            defaultmodel1.addRow(modeldata);
        }
        modeltabel.close();
    } catch (SQLException e) {
        System.out.println(e);
    }
        
    }
    public javax.swing.table.DefaultTableModel defaultmodel1 = defaulttable1();
        private javax.swing.table.DefaultTableModel defaulttable1(){
            return new javax.swing.table.DefaultTableModel(
                    new  Object[][]{},
                    new String[]{"id_lelang","nama_barang","deskripsi_barang","harga_awal","harga_akhir","nama_petugas","status"}
            ){
            boolean[] canEdit = new boolean[]{false,false,false,false,false,false,false};
            public boolean isCellEditable(int rowIndex,int columnIndex){
            return canEdit[columnIndex];
                }};
        }
    private void tabelmodel2(){
    try {
        String sql2="select * from barang";
        ResultSet modeltabel =connection.createStatement().executeQuery(sql2);
        while (modeltabel.next()) {            
            String[] modeldata={modeltabel.getString(1),modeltabel.getString(2),modeltabel.getString(3),modeltabel.getString(4),modeltabel.getString(5)};
            defaultmodel2.addRow(modeldata);
        }
        modeltabel.close();
    } catch (SQLException e) {
        System.out.println(e);
    }
        
    }
    public javax.swing.table.DefaultTableModel defaultmodel2 = defaulttable2();
        private javax.swing.table.DefaultTableModel defaulttable2(){
            return new javax.swing.table.DefaultTableModel(
                    new  Object[][]{},
                    new String[]{"id_barang","nama_barang","tgl","harga_awal","deskripsi_barang"}
            ){
            boolean[] canEdit = new boolean[]{false,false,false,false,false};
            public boolean isCellEditable(int rowIndex,int columnIndex){
            return canEdit[columnIndex];
                }};
        }
    private void refreshModel(){
        defaultmodel1.setRowCount(0);
        tabelmodel1();
        tabel.setModel(this.defaultmodel1);
        defaultmodel2.setRowCount(0);
        tabelmodel2();
        tabel2.setModel(this.defaultmodel2);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cards = new javax.swing.JPanel();
        card2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        kembali = new javax.swing.JButton();
        tutup = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        cari1 = new javax.swing.JButton();
        tcari1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        card1 = new javax.swing.JPanel();
        buka1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tutup1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        card3 = new javax.swing.JPanel();
        buka = new javax.swing.JButton();
        kembali2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabel2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tcari = new javax.swing.JTextField();
        cari = new javax.swing.JButton();
        refresh1 = new javax.swing.JButton();

        setBackground(java.awt.Color.white);
        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        cards.setLayout(new java.awt.CardLayout());

        card2.setBackground(java.awt.Color.white);

        jScrollPane1.setBackground(java.awt.Color.white);

        tabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabel.setForeground(java.awt.Color.black);
        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_lelang", "nama_barang", "deskripsi_barang", "harga_awal", "harga_terbaru", "nama_petugas", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel.setGridColor(java.awt.Color.white);
        tabel.setShowVerticalLines(false);
        tabel.getTableHeader().setReorderingAllowed(false);
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        kembali.setBackground(new java.awt.Color(21, 106, 241));
        kembali.setForeground(java.awt.Color.white);
        kembali.setText("KEMBALI");
        kembali.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        kembali.setBorderPainted(false);
        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });

        tutup.setBackground(new java.awt.Color(21, 106, 241));
        tutup.setForeground(java.awt.Color.white);
        tutup.setText("TUTUP");
        tutup.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        tutup.setBorderPainted(false);
        tutup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutupActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        jLabel4.setForeground(java.awt.Color.black);
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("TUTUP LELANG");

        refresh.setBackground(new java.awt.Color(21, 106, 241));
        refresh.setForeground(java.awt.Color.white);
        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/refresh-16.png"))); // NOI18N
        refresh.setText("Refresh");
        refresh.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        refresh.setBorderPainted(false);
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        cari1.setBackground(new java.awt.Color(21, 106, 241));
        cari1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/search-14-24.png"))); // NOI18N
        cari1.setBorderPainted(false);
        cari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Open Sans", 2, 12)); // NOI18N
        jLabel6.setText("cari berdasarkan nama");

        javax.swing.GroupLayout card2Layout = new javax.swing.GroupLayout(card2);
        card2.setLayout(card2Layout);
        card2Layout.setHorizontalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card2Layout.createSequentialGroup()
                .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(card2Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(tutup, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(card2Layout.createSequentialGroup()
                        .addGap(0, 20, Short.MAX_VALUE)
                        .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(card2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tcari1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cari1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33))
        );
        card2Layout.setVerticalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(13, 13, 13)
                .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tcari1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cari1)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tutup, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(card2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        cards.add(card2, "card2");

        card1.setBackground(java.awt.Color.white);
        card1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        card1.setPreferredSize(new java.awt.Dimension(887, 558));

        buka1.setBackground(new java.awt.Color(21, 106, 241));
        buka1.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        buka1.setForeground(java.awt.Color.white);
        buka1.setText("BUKA LELANG");
        buka1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        buka1.setBorderPainted(false);
        buka1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buka1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buka1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Open Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.black);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SELAMAT DATANG DI APLIKASI LELANG");

        tutup1.setBackground(new java.awt.Color(21, 106, 241));
        tutup1.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        tutup1.setForeground(java.awt.Color.white);
        tutup1.setText("TUTUP LELANG");
        tutup1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        tutup1.setBorderPainted(false);
        tutup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutup1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Open Sans", 3, 14)); // NOI18N
        jLabel2.setText("*Pilih salah satu tombol dibawah untuk membuka atau menutup lelang");

        javax.swing.GroupLayout card1Layout = new javax.swing.GroupLayout(card1);
        card1.setLayout(card1Layout);
        card1Layout.setHorizontalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(buka1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(tutup1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(199, 199, 199))
        );
        card1Layout.setVerticalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(67, 67, 67)
                .addGroup(card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buka1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tutup1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        cards.add(card1, "card1");

        card3.setBackground(java.awt.Color.white);

        buka.setBackground(new java.awt.Color(21, 106, 241));
        buka.setForeground(java.awt.Color.white);
        buka.setText("BUKA");
        buka.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        buka.setBorderPainted(false);
        buka.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bukaActionPerformed(evt);
            }
        });

        kembali2.setBackground(new java.awt.Color(21, 106, 241));
        kembali2.setForeground(java.awt.Color.white);
        kembali2.setText("KEMBALI");
        kembali2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        kembali2.setBorderPainted(false);
        kembali2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kembali2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembali2ActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray));

        tabel2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_barang", "nama_barang", "tgl", "harga_awal", "deskripsi_barang"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel2.setSelectionBackground(new java.awt.Color(21, 106, 241));
        tabel2.setShowVerticalLines(false);
        tabel2.getTableHeader().setReorderingAllowed(false);
        tabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabel2);

        jLabel3.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        jLabel3.setForeground(java.awt.Color.black);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BUKA LELANG");

        jLabel5.setFont(new java.awt.Font("Open Sans", 2, 12)); // NOI18N
        jLabel5.setText("cari berdasarkan nama");

        cari.setBackground(new java.awt.Color(21, 106, 241));
        cari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/search-14-24.png"))); // NOI18N
        cari.setBorderPainted(false);
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        refresh1.setBackground(new java.awt.Color(21, 106, 241));
        refresh1.setForeground(java.awt.Color.white);
        refresh1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/refresh-16.png"))); // NOI18N
        refresh1.setText("Refresh");
        refresh1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        refresh1.setBorderPainted(false);
        refresh1.setPreferredSize(new java.awt.Dimension(61, 21));
        refresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout card3Layout = new javax.swing.GroupLayout(card3);
        card3.setLayout(card3Layout);
        card3Layout.setHorizontalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(card3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(card3Layout.createSequentialGroup()
                        .addComponent(buka, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(kembali2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(432, 432, 432)
                        .addComponent(refresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(card3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tcari, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cari))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        card3Layout.setVerticalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cari)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kembali2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buka, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(card3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(refresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );

        cards.add(card3, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cards, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cards, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buka1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buka1ActionPerformed
        // TODO add your handling code here:        
        cardLayout.show(cards, "card3");
    }//GEN-LAST:event_buka1ActionPerformed

    private void tutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutupActionPerformed
        // TODO add your handling code here:
        if("buka".equals(this.status)){
        Object[]options = {"YA","TIDAK"};
        try {
            String sql="update lelang set status='tutup' where id_lelang='"+this.idlelang1+"'";
            Statement s = connection.createStatement();
            int konfirmasi=JOptionPane.showOptionDialog(null,"Apakah Anda yakin ingin menutup pelelangan?","Konfirmasi",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[0]);
            if(konfirmasi==JOptionPane.YES_OPTION){
               s.executeUpdate(sql); 
            }
            JOptionPane.showMessageDialog(null, "Berhasil menutup Pelelangan!");
            refreshModel();
            s.close();
        } catch (SQLException e) {
            System.out.println(e);
        }}else{JOptionPane.showMessageDialog(null, "Lelang telah ditutup");}
    }//GEN-LAST:event_tutupActionPerformed

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        // TODO add your handling code here:
        cardLayout.show(cards, "card1");
    }//GEN-LAST:event_kembaliActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
        tutup.setEnabled(true);
        this.row=tabel.getSelectedRow();
        this.idlelang1=tabel.getValueAt(row, 0).toString();
        this.status =tabel.getValueAt(row, 6).toString();
    }//GEN-LAST:event_tabelMouseClicked

    private void bukaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bukaActionPerformed
        // TODO add your handling code here:
            Object[]options = {"YA","TIDAK"};
            int konfirmasi=JOptionPane.showOptionDialog(null,"Apakah Anda yakin ingin membuka pelelangan?","Konfirmasi",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[0]);
            if(konfirmasi==JOptionPane.YES_OPTION){
                try {
                    String sql="INSERT INTO `lelang` (`id_lelang`, `id_barang`, `tgl_lelang`, `harga_akhir`, `id_user`, `id_petugas`, `status`) VALUES (NULL, '"
                            +this.idbarang2+"', '"
                            +this.tgl2+"', '"
                            +this.harga2+"', '0', '"
                            +this.idpetugas+"', 'buka');";
                    Statement s = connection.createStatement();
                    s.executeUpdate(sql);
                    s.close();
                    JOptionPane.showMessageDialog(rootPane, "Berhasil membuka pelelangan!");
                    refreshModel();
                    cardLayout.show(cards, "card1");
                } catch (SQLException e) {
                    System.out.println(e);
                }
            }
    }//GEN-LAST:event_bukaActionPerformed

    private void kembali2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembali2ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(cards, "card1");
    }//GEN-LAST:event_kembali2ActionPerformed

    private void tabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel2MouseClicked
        // TODO add your handling code here:
        buka.setEnabled(true);
        this.row2=tabel2.getSelectedRow();
        this.idbarang2=tabel2.getValueAt(row2, 0).toString();
        this.tgl2=tabel2.getValueAt(row2, 2).toString();
        this.harga2=tabel2.getValueAt(row2, 3).toString();
    }//GEN-LAST:event_tabel2MouseClicked

    private void tutup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutup1ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(cards, "card2");
    }//GEN-LAST:event_tutup1ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        refreshModel();
        
    }//GEN-LAST:event_refreshActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
        try {
            defaultmodel2.setRowCount(0);
            String sql="select * from barang where nama_barang like '%"+tcari.getText()+"%'";
            ResultSet modeltabel =connection.createStatement().executeQuery(sql);
            while (modeltabel.next()) {
                String[] modeldata={modeltabel.getString(1),modeltabel.getString(2),modeltabel.getString(3),modeltabel.getString(4),modeltabel.getString(5)};
                defaultmodel2.addRow(modeldata);
            }
            modeltabel.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_cariActionPerformed

    private void cari1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari1ActionPerformed
        // TODO add your handling code here:
        try {
            defaultmodel1.setRowCount(0);
            String sql="select lelang.id_lelang,lelang.id_barang,barang.nama_barang,barang.deskripsi_barang, barang.harga_awal,lelang.harga_akhir,lelang.id_petugas,petugas.nama_petugas,lelang.status from lelang inner join barang ON lelang.id_barang=barang.id_barang inner join petugas on lelang.id_petugas= petugas.id_petugas where barang.nama_barang like '%"+tcari1.getText()+"%'";
            ResultSet modeltabel =connection.createStatement().executeQuery(sql);
            while (modeltabel.next()) {            
                String[] modeldata={modeltabel.getString(1),modeltabel.getString(3),modeltabel.getString(4),modeltabel.getString(5),modeltabel.getString(6),modeltabel.getString(8),modeltabel.getString(9)};
                defaultmodel1.addRow(modeldata);defaultmodel2.setRowCount(0);
        tabelmodel2();
        tabel2.setModel(this.defaultmodel2);
            }
        modeltabel.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_cari1ActionPerformed

    private void refresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh1ActionPerformed
        // TODO add your handling code here:
        refreshModel();
    }//GEN-LAST:event_refresh1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buka;
    private javax.swing.JButton buka1;
    private javax.swing.JPanel card1;
    private javax.swing.JPanel card2;
    private javax.swing.JPanel card3;
    private javax.swing.JPanel cards;
    private javax.swing.JButton cari;
    private javax.swing.JButton cari1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton kembali;
    private javax.swing.JButton kembali2;
    private javax.swing.JButton refresh;
    private javax.swing.JButton refresh1;
    private javax.swing.JTable tabel;
    private javax.swing.JTable tabel2;
    private javax.swing.JTextField tcari;
    private javax.swing.JTextField tcari1;
    private javax.swing.JButton tutup;
    private javax.swing.JButton tutup1;
    // End of variables declaration//GEN-END:variables
}
