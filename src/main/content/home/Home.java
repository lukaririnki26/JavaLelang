/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.content.home;

import java.awt.CardLayout;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import main.content.data.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import lib.DBHelper;
import lib.Lihat;

/**
 *
 * @author fahmi
 */
public class Home extends javax.swing.JInternalFrame {
   Connection connection = new DBHelper().init();
    /**
     * 
     * Creates new form Data
     */
    CardLayout cardLayout;
    private String iduser,idlelang,idbarang,idpetugas,hargak,status,desk1,lihat1;
    public Home(String id) {
        initComponents();
        BasicInternalFrameUI ui = (BasicInternalFrameUI) getUI();
        ui.setNorthPane(null);
        this.iduser=id;
        cardLayout = (CardLayout)(cards.getLayout());
        cardLayout.show(cards, "card1");
        tabelmodel();
        tabel.setModel(defaultmodel);
        ikut.setEnabled(false);
        refreshModel();
    }
    int row=0;
    
    private void tabelmodel(){
    try {
        String sql="select lelang.id_lelang,lelang.id_barang,barang.nama_barang,barang.deskripsi_barang, barang.harga_awal,lelang.harga_akhir,lelang.id_petugas,petugas.nama_petugas,lelang.status from lelang inner join barang ON lelang.id_barang=barang.id_barang inner join petugas on lelang.id_petugas= petugas.id_petugas";
        ResultSet modeltabel =connection.createStatement().executeQuery(sql);
        while (modeltabel.next()) {            
            String[] modeldata={modeltabel.getString(1),modeltabel.getString(3),modeltabel.getString(4),modeltabel.getString(5),modeltabel.getString(6),modeltabel.getString(8),modeltabel.getString(9)};
            defaultmodel.addRow(modeldata);
        }
        modeltabel.close();
    } catch (SQLException e) {
        System.out.println(e);
    }
        
    }
    private javax.swing.table.DefaultTableModel defaultmodel = defaulttable();
        private javax.swing.table.DefaultTableModel defaulttable(){
            return new javax.swing.table.DefaultTableModel(
                    new  Object[][]{},
                    new String[]{"id_lelang","nama_barang","deskripsi_barang","harga_awal","harga_akhir","nama_petugas","status"}
            ){
            boolean[] canEdit = new boolean[]{false,false,false,false,false,false,false};
            public boolean isCellEditable(int rowIndex,int columnIndex){
            return canEdit[columnIndex];
                }};
        }
    private void refreshModel(){
        defaultmodel.setRowCount(0);
        tabelmodel();
        tabel.setModel(this.defaultmodel);
    }
    public static BufferedImage loadImage(String ref){
        BufferedImage bimg =null;
        try {
            bimg = ImageIO.read(new File(ref));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return bimg;
    }
    public static BufferedImage resize(BufferedImage img, int newW, int newH){
        int w = img.getWidth();
        int h = img.getHeight();
        
        BufferedImage dimg = new BufferedImage(newW, newH,img.getType());
      
        Graphics2D g = dimg.createGraphics();
        g.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g.drawImage(img, 0 , 0, newW, newH, 0, 0, w, h, null);
        g.dispose();
        return dimg;
        
    }
    public void tampilkanGambar(String fto){
        String urlimg = "src/foto/"+fto;
        BufferedImage loadImg = loadImage(urlimg);
        ImageIcon iconimg = new ImageIcon(resize(loadImg, vfoto.getWidth(), vfoto.getHeight()));
        vfoto.setIcon(iconimg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cards = new javax.swing.JPanel();
        card2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        kembali = new javax.swing.JButton();
        ikut = new javax.swing.JButton();
        cari = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tcari = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        refresh1 = new javax.swing.JButton();
        card1 = new javax.swing.JPanel();
        mulai = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        card3 = new javax.swing.JPanel();
        k10 = new javax.swing.JButton();
        k100 = new javax.swing.JButton();
        k1000 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        barang = new javax.swing.JLabel();
        harga = new javax.swing.JLabel();
        desk = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        vfoto = new javax.swing.JLabel();
        lihat = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);
        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        cards.setLayout(new java.awt.CardLayout());

        card2.setBackground(java.awt.Color.white);

        jScrollPane1.setBackground(java.awt.Color.white);

        tabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabel.setForeground(java.awt.Color.black);
        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_lelang", "nama_barang", "deskripsi_barang", "harga_awal", "harga_terbaru", "nama_petugas", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel.setGridColor(java.awt.Color.white);
        tabel.setShowVerticalLines(false);
        tabel.getTableHeader().setReorderingAllowed(false);
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        kembali.setBackground(new java.awt.Color(21, 106, 241));
        kembali.setForeground(java.awt.Color.white);
        kembali.setText("Kembali");
        kembali.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        kembali.setBorderPainted(false);
        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });

        ikut.setBackground(new java.awt.Color(21, 106, 241));
        ikut.setForeground(java.awt.Color.white);
        ikut.setText("Ikut");
        ikut.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        ikut.setBorderPainted(false);
        ikut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ikut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ikutActionPerformed(evt);
            }
        });

        cari.setBackground(new java.awt.Color(21, 106, 241));
        cari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/search-14-24.png"))); // NOI18N
        cari.setBorderPainted(false);
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Open Sans", 2, 12)); // NOI18N
        jLabel4.setText("cari berdasarkan nama");

        jLabel6.setFont(new java.awt.Font("Open Sans", 1, 24)); // NOI18N
        jLabel6.setForeground(java.awt.Color.black);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("DAFTAR LELANG");

        refresh1.setBackground(new java.awt.Color(21, 106, 241));
        refresh1.setForeground(java.awt.Color.white);
        refresh1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/refresh-16.png"))); // NOI18N
        refresh1.setText("Refresh");
        refresh1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        refresh1.setBorderPainted(false);
        refresh1.setPreferredSize(new java.awt.Dimension(85, 31));
        refresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout card2Layout = new javax.swing.GroupLayout(card2);
        card2.setLayout(card2Layout);
        card2Layout.setHorizontalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(card2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(card2Layout.createSequentialGroup()
                        .addComponent(ikut, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(370, 370, 370)
                        .addComponent(refresh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(card2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tcari, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cari))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        card2Layout.setVerticalGroup(
            card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cari)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(card2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ikut, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(card2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refresh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        cards.add(card2, "card2");

        card1.setBackground(java.awt.Color.white);
        card1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        card1.setPreferredSize(new java.awt.Dimension(887, 558));

        mulai.setBackground(new java.awt.Color(21, 106, 241));
        mulai.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        mulai.setForeground(java.awt.Color.white);
        mulai.setText("Mulai");
        mulai.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        mulai.setBorderPainted(false);
        mulai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mulai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulaiActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Open Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.black);
        jLabel1.setText("SELAMAT DATANG DI APLIKASI LELANG");

        jLabel3.setFont(new java.awt.Font("Open Sans", 3, 14)); // NOI18N
        jLabel3.setText("*Tekan tombol mulai dibawah ini untuk mengikuti pelelangan");

        javax.swing.GroupLayout card1Layout = new javax.swing.GroupLayout(card1);
        card1.setLayout(card1Layout);
        card1Layout.setHorizontalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card1Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(225, 225, 225))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                        .addComponent(mulai, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(365, 365, 365))))
        );
        card1Layout.setVerticalGroup(
            card1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(136, 136, 136)
                .addComponent(mulai, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        cards.add(card1, "card1");

        card3.setBackground(java.awt.Color.white);

        k10.setBackground(new java.awt.Color(21, 106, 241));
        k10.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        k10.setForeground(java.awt.Color.white);
        k10.setText("10.000");
        k10.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        k10.setBorderPainted(false);
        k10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        k10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k10ActionPerformed(evt);
            }
        });

        k100.setBackground(new java.awt.Color(21, 106, 241));
        k100.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        k100.setForeground(java.awt.Color.white);
        k100.setText("100.000");
        k100.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        k100.setBorderPainted(false);
        k100.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        k100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k100ActionPerformed(evt);
            }
        });

        k1000.setBackground(new java.awt.Color(21, 106, 241));
        k1000.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        k1000.setForeground(java.awt.Color.white);
        k1000.setText("1.000.000");
        k1000.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        k1000.setBorderPainted(false);
        k1000.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        k1000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k1000ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(21, 106, 241));

        barang.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        barang.setForeground(java.awt.Color.white);
        barang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        barang.setText("Barang");

        harga.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        harga.setForeground(java.awt.Color.white);
        harga.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        harga.setText("harga sekarang");

        desk.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        desk.setForeground(java.awt.Color.white);
        desk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        desk.setText("desk");
        desk.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        refresh.setBackground(new java.awt.Color(21, 106, 241));
        refresh.setForeground(java.awt.Color.white);
        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon/refresh-16.png"))); // NOI18N
        refresh.setText("Refresh");
        refresh.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        refresh.setBorderPainted(false);
        refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        lihat.setText("Lihat");
        lihat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(barang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(vfoto, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lihat)))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(barang, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vfoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lihat)
                        .addGap(0, 183, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desk, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(harga)))
        );

        jLabel5.setFont(new java.awt.Font("Open Sans", 2, 14)); // NOI18N
        jLabel5.setForeground(java.awt.Color.red);
        jLabel5.setText("*Tekan tombol dibawah ini untuk menawar barang dan tekan tombol refresh diatas untuk mengupdate harga barang");

        jLabel2.setFont(new java.awt.Font("Open Sans", 1, 24)); // NOI18N
        jLabel2.setForeground(java.awt.Color.black);
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PENAWARAN HARGA");

        javax.swing.GroupLayout card3Layout = new javax.swing.GroupLayout(card3);
        card3.setLayout(card3Layout);
        card3Layout.setHorizontalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(card3Layout.createSequentialGroup()
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card3Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(k10, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(k100, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(k1000, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(card3Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        card3Layout.setVerticalGroup(
            card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(k10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(k100, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(k1000, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cards.add(card3, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cards, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cards, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mulaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulaiActionPerformed
        // TODO add your handling code here:       
     
        cardLayout.show(cards, "card2");
    }//GEN-LAST:event_mulaiActionPerformed

    private void ikutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ikutActionPerformed
        // TODO add your handling code here:
        String st= this.status;
        if("tutup".equals(st)){
            JOptionPane.showMessageDialog(null, "Lelang telah ditutup \nSilahkan pilih pelelangan lain!");
        }else{
        cardLayout.show(cards, "card3");
        try {
            String sql="select id_barang,id_petugas,harga_akhir from lelang where id_lelang='"+this.idlelang+"' ";
            ResultSet rs = connection.createStatement().executeQuery(sql);
            while (rs.next()) {              
                this.idbarang=rs.getString(1);
                this.idpetugas=rs.getString(2);
                harga.setText("Rp. "+rs.getString(3));
                this.hargak = rs.getString(3);
            }
            rs.close();
        } catch (Exception e) {
        }
        try {
            String sql="select nama_barang,deskripsi_barang,foto from barang where id_barang='"+this.idbarang+"'";
            ResultSet rs = connection.createStatement().executeQuery(sql);
            while (rs.next()) {                
                barang.setText(rs.getString(1));
                desk.setText(rs.getString(2));
                this.desk1 = rs.getString(2);
                tampilkanGambar(rs.getString(3));
                this.lihat1 = rs.getString(3);
            }
            rs.close();
        } catch (Exception e) {
        }
        }
    }//GEN-LAST:event_ikutActionPerformed

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        // TODO add your handling code here:
        cardLayout.show(cards, "card1");
    }//GEN-LAST:event_kembaliActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
        ikut.setEnabled(true);
        row=tabel.getSelectedRow();
        this.idlelang =tabel.getValueAt(row, 0).toString();
        this.status=tabel.getValueAt(row, 6).toString();
    }//GEN-LAST:event_tabelMouseClicked

    private void k10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k10ActionPerformed
        // TODO add your handling code here:
        int k1=Integer.valueOf(this.hargak)+10000;
        String sql1="INSERT INTO `riwayat_lelang` (`id_riwayat`, `id_lelang`, `id_barang`, `id_user`, `penawaran_harga`) VALUES (NULL, '"+this.idlelang+"', '"+this.idbarang+"','"+this.iduser+"','"+k1+"');";
        String sql2="update lelang set harga_akhir='"+k1+"',id_user='"+this.iduser+"' where id_lelang='"+this.idlelang+"'";
        try {            
            Statement s1 =connection.createStatement();
            Statement s2 =connection.createStatement();
            s1.executeUpdate(sql1);
            s2.executeUpdate(sql2);
            JOptionPane.showMessageDialog(null, "anda telah menawar senilai Rp."+String.valueOf(k1));
            s1.close();
            s2.close();
            k10.setEnabled(false);
            k100.setEnabled(false);
            k1000.setEnabled(false);
            refreshModel();
        } catch (SQLException e) {
            System.out.println(e);
        }
 
    }//GEN-LAST:event_k10ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        try {
            String sql="select harga_akhir,status from lelang where id_lelang='"+this.idlelang+"'";
            ResultSet rs = connection.createStatement().executeQuery(sql);
            while (rs.next()) {                
                harga.setText("Rp. "+rs.getString(1));
                this.hargak = rs.getString(1);
                String st= rs.getString(2);
                if("tutup".equals(st)){
                    JOptionPane.showMessageDialog(null, "lelang telah ditutup");
                    cardLayout.show(cards,"card2");
                }     
            }
            k10.setEnabled(true);
            k100.setEnabled(true);
            k1000.setEnabled(true);
            rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_refreshActionPerformed

    private void k100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k100ActionPerformed
        // TODO add your handling code here:
        int k2=Integer.valueOf(this.hargak)+100000;
        String sql1="INSERT INTO `riwayat_lelang` (`id_riwayat`, `id_lelang`, `id_barang`, `id_user`, `penawaran_harga`) VALUES (NULL, '"+this.idlelang+"', '"+this.idbarang+"','"+this.iduser+"','"+k2+"');";
        String sql2="update lelang set harga_akhir='"+k2+"' where id_lelang='"+this.idlelang+"'";
        try {            
            Statement s1 =connection.createStatement();
            Statement s2 =connection.createStatement();
            s1.executeUpdate(sql1);
            s2.executeUpdate(sql2);
            JOptionPane.showMessageDialog(null, "anda telah menawar senilai Rp."+String.valueOf(k2));
            s1.close();
            s2.close();
            k10.setEnabled(false);
            k100.setEnabled(false);
            k1000.setEnabled(false);
            refreshModel();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_k100ActionPerformed

    private void k1000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k1000ActionPerformed
        // TODO add your handling code here:
        int k3=Integer.valueOf(this.hargak)+1000000;
        String sql1="INSERT INTO `riwayat_lelang` (`id_riwayat`, `id_lelang`, `id_barang`, `id_user`, `penawaran_harga`) VALUES (NULL, '"+this.idlelang+"', '"+this.idbarang+"','"+this.iduser+"','"+k3+"');";
        String sql2="update lelang set harga_akhir='"+k3+"' where id_lelang='"+this.idlelang+"'";
        try {            
            Statement s1 =connection.createStatement();
            Statement s2 =connection.createStatement();
            s1.executeUpdate(sql1);
            s2.executeUpdate(sql2);
            JOptionPane.showMessageDialog(null, "anda telah menawar senilai Rp."+String.valueOf(k3));
            s1.close();
            s2.close();
            k10.setEnabled(false);
            k100.setEnabled(false);
            k1000.setEnabled(false);
            refreshModel();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_k1000ActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
        try {
            defaultmodel.setRowCount(0);
            String sql="select * from barang where nama_barang like '%"+tcari.getText()+"%'";
            ResultSet modeltabel =connection.createStatement().executeQuery(sql);
            while (modeltabel.next()) {
                String[] modeldata={modeltabel.getString(1),modeltabel.getString(2),modeltabel.getString(3),modeltabel.getString(4),modeltabel.getString(5)};
                defaultmodel.addRow(modeldata);
            }
            modeltabel.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_cariActionPerformed

    private void refresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh1ActionPerformed
        // TODO add your handling code here:
        refreshModel();
    }//GEN-LAST:event_refresh1ActionPerformed

    private void lihatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatActionPerformed
        // TODO add your handling code here:
       Lihat l =  new Lihat(this.lihat1);
       l.show();
    }//GEN-LAST:event_lihatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel barang;
    private javax.swing.JPanel card1;
    private javax.swing.JPanel card2;
    private javax.swing.JPanel card3;
    private javax.swing.JPanel cards;
    private javax.swing.JButton cari;
    private javax.swing.JLabel desk;
    private javax.swing.JLabel harga;
    private javax.swing.JButton ikut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton k10;
    private javax.swing.JButton k100;
    private javax.swing.JButton k1000;
    private javax.swing.JButton kembali;
    private javax.swing.JButton lihat;
    private javax.swing.JButton mulai;
    private javax.swing.JButton refresh;
    private javax.swing.JButton refresh1;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField tcari;
    private javax.swing.JLabel vfoto;
    // End of variables declaration//GEN-END:variables
}
